"""
Relay Tracker ‚Äî –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –≥–µ–æ–≥—Ä–∞—Ñ–∏—é —Ä–µ—Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ Bitcoin-—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
"""

import sys
import requests

def get_relay_data(txid):
    url = f"https://oxt.me/tx/{txid}.json"
    headers = {"Accept": "application/json"}
    response = requests.get(url, headers=headers)
    if response.status_code != 200:
        raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç oxt.me")
    return response.json()

def analyze_relay(data):
    nodes = data.get("relayed_by", [])
    countries = {}
    for node in nodes:
        location = node.get("location", {})
        country = location.get("country_name", "Unknown")
        countries[country] = countries.get(country, 0) + 1
    return countries

def main(txid):
    print(f"üåê –ê–Ω–∞–ª–∏–∑ —Ä–µ—Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ {txid}...")
    try:
        data = get_relay_data(txid)
        countries = analyze_relay(data)
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞:", e)
        return

    print(f"üåç –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Ä–µ—Ç—Ä–∞–Ω—Å–ª–∏—Ä–æ–≤–∞–ª–∞—Å—å –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Å—Ç—Ä–∞–Ω:")
    for country, count in countries.items():
        print(f" - {country}: {count} —Ä–∞–∑")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python relay_tracker.py <txid>")
        sys.exit(1)
    main(sys.argv[1])
